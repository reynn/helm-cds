apiVersion: apps/v1
{{- $service := "api" }}
kind: StatefulSet
metadata:
  name: {{ include "cds.fullname" . }}-{{ $service }}
  labels:
    helm.sh/chart: "{{ .Chart.Name }}"
    app.kubernetes.io/name: {{ include "cds.fullname" . }}-{{ $service }}
    app.kubernetes.io/role: "{{ $service }}"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
spec:
  serviceName: {{ include "cds.fullname" . }}-{{ $service }}
  replicas: {{ .Values.api.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "cds.fullname" . }}-{{ $service }}
      app.kubernetes.io/role: "{{ $service }}"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "cds.fullname" . }}-{{ $service }}
        app.kubernetes.io/role: "{{ $service }}"
    spec:
      containers:
        - name: "{{ include "cds.fullname" . }}-{{ $service }}"
          image: "{{ .Values.image.engine.registry }}/{{ .Values.image.engine.repository }}:{{ .Values.image.engine.tag }}"
          imagePullPolicy: {{ .Values.image.engine.pullPolicy | quote }}
          command: ["/bin/sh"]
          securityContext:
            runAsUser: 0
            runAsGroup: 0
          args: ["-c", "/app/cds-engine-linux-amd64 start {{ $service }} --config /config/config.toml"]
          env:
            - name: CDS_API_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  {{- if .Values.postgresql.enabled }}
                  name: {{ include "cds.postgresql.fullname" . }}
                  key: postgres-password #reference postgresql chart secret
                  {{- else }}
                  name: {{ include "cds.fullname" . }}-secrets
                  key: postgresPassword
                  {{- end }}
            - name: CDS_API_AUTH_SHAREDINFRATOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "cds.fullname" . }}-secrets
                  key: sharedInfraToken
            - name: CDS_{{ $service | upper }}_SECRETS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "cds.fullname" . }}-secrets
                  key: secretsToken
            - name: CDS_{{ $service | upper }}_CACHE_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  {{- if .Values.redis.enabled }}
                  name: {{ template "cds.redis.fullname" . }}
                  key: redis-password #reference redis chart secret
                  {{- else }}
                  name: {{ template "cds.fullname" }}-secrets
                  key: redisPassword
                  {{- end }}
            {{- if .Values.redis.enabled }}
            - name: CDS_{{ $service | upper }}_CACHE_REDIS_HOST
              value: {{ template "cds.redis.fullname" . }}-master:{{ default .Values.commonConfig.cache.port }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.api.ports.http }}
            - name: grpc
              containerPort: {{ .Values.api.ports.grpc }}
          livenessProbe:
            httpGet:
              path: /mon/version
              port: {{ .Values.api.ports.http }}
            initialDelaySeconds: 120
          readinessProbe:
            httpGet:
              path: /mon/status
              port: {{ .Values.api.ports.http }}
            initialDelaySeconds: 30
          resources:
            {{- .Values.api.resources | default .Values.commonConfig.resources | toYaml | nindent 12 }}
          volumeMounts:
            - name: cds-config
              mountPath: /config
            - name: {{ include "cds.fullname" . }}-{{ $service }}-data
              mountPath: {{ .Values.api.persistence.mountPath }}
      volumes:
        - name: {{ include "cds.name" . }}-config
          configMap:
            name: {{ include "cds.name" . }}-configmap
  volumeClaimTemplates:
    - metadata:
        name: {{ include "cds.fullname" . }}-{{ $service }}-data
        labels:
          app.kubernetes.io/name: {{ include "cds.fullname" . }}-{{ $service }}
          app.kubernetes.io/role: {{ $service | quote }}
      spec:
        accessModes:
        {{- .Values.api.persistence.accessModes | toYaml | nindent 10 }}
        resources:
          requests:
            storage: {{ .Values.api.persistence.size | default .Values.commonConfig.persistence.size | quote }}
        {{- if and (.Values.api.persistence.storageClass | default .Values.commonConfig.persistence.storageClass) (not .Values.api.persistence.hostPath) -}}
        {{- if (eq "-" (.Values.api.persistence.storageClass | default .Values.commonConfig.persistence.storageClass)) -}}
        storageClassName: ""
        {{- else }}
        storageClassName: "{{ .Values.api.persistence.storageClass | default .Values.commonConfig.persistence.storageClass }}"
        {{- end }}
  {{- end }}
  updateStrategy:
  {{- .Values.api.updateStrategy | toYaml | nindent 4 -}}
