apiVersion: apps/v1
{{- $service := "ui" }}
kind: Deployment
metadata:
  name: {{ include "cds.fullname" . }}-{{ $service }}
  labels:
    app.kubernetes.io/name: {{ include "cds.name" . }}-{{ $service }}
    {{- include "cds.baselabels" . | nindent 4 }}
spec:
  replicas: {{ .Values.ui.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "cds.name" . }}-{{ $service }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "cds.name" . }}-{{ $service }}
        {{- include "cds.baselabels" . | nindent 8 }}
    spec:
      containers:
        - name: "{{ template "cds.fullname" . }}-{{ $service }}"
          image: "{{ .Values.ui.registry }}/{{ .Values.ui.repository }}:{{ .Values.ui.tag }}"
          imagePullPolicy: {{ .Values.ui.pullPolicy | quote }}
          env:
            - name: BACKEND_HOST
              value: {{ template "cds.fullname" . }}-api
            - name: BASE_URL
              value: {{ .Values.ui.config.baseUrl | quote}}
            - name: CDS_API_AUTH_SHAREDINFRATOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ template "cds.fullname" . }}-secrets
                  key: sharedInfraToken
          ports:
            - name: http
              containerPort: {{ .Values.ui.port }}
            - name: https
              containerPort: {{ .Values.ui.port }}
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.ui.port }}
            initialDelaySeconds: 120
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.ui.port }}
            initialDelaySeconds: 30
          {{- if or (.Values.ui.resources) (.Values.commonConfig.resources)}}
          resources:
          {{- .Values.ui.resources | default .Values.commonConfig.resources | toYaml | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: cds-config
              mountPath: /config
      volumes:
        - name: cds-config
          configMap:
            name: {{ include "cds.fullname" . }}-configmap
      {{- if or (.Values.ui.nodeSelector) (.Values.commonConfig.nodeSelector)}}
      nodeSelector:
      {{- .Values.ui.nodeSelector | default .Values.commonConfig.nodeSelector| toYaml | nindent 8 }}
      {{- end }}
      {{- if or (.Values.ui.affinity) (.Values.commonConfig.affinity)}}
      affinity:
      {{- .Values.ui.affinity | default .Values.commonConfig.affinity | toYaml | nindent 8 }}
      {{- end }}
      {{- if or (.Values.ui.tolerations) (.Values.commonConfig.tolerations)}}
      tolerations:
      {{- .Values.ui.tolerations | default .Values.commonConfig.tolerations | toYaml | nindent 8 }}
      {{- end }}
